<?php

/**
 * @file
 * Provides functions and callbacks for managing a global word list, for example
 * for managing blacklisted words.
 */

/**
 * Implements hook_menu().
 */
function wowitems_menu() {
  $items['admin/wowitems'] = array(
    'title' => 'WoW TESTING STUFF',
    'description' => 'wowitems description',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wowitems_page'),
    'access callback' => 'user_access',
    'access arguments' => array('administer_site_configuration'),
    'menu_name' => 'management',
  );
  return $items;
}

/**
 * Builds the form for configuring the Word list.
 */
function wowitems_page() {



  $accountColumns = [
    "id",
    "username",
    "sha_pass_hash",
    "sessionkey",
    "v",
    "s",
    "token_key",
    "email",
    "reg_mail",
    "joindate",
    "last_ip",
    "last_attempt_ip",
    "failed_logins",
    "locked",
    "lock_country",
    "last_login",
    "online",
    "expansion",
    "mutetime",
    "mutereason",
    "muteby",
    "locale",
    "os",
    "recruiter",
  ];
  test();




  $sql = "SELECT * FROM `account`";
  // Switch to the external DB
  db_set_active('auth');
// Get some data. The same rules about accessing the API functions apply here.
  $results = db_query($sql);

  db_set_active('default');
}

function test() {

//  $charname = $row->name;
  $errors = 0;
  $items_array = array();
  //mysql_select_db($config['char_db']);
//  $query_select_character = "SELECT guid, race, gender, playerBytes, playerBytes2 FROM characters.characters WHERE name = $charname LIMIT 1";


  $query_select_character = "SELECT guid, race, gender, playerBytes, playerBytes2 FROM characters WHERE name = 'Thepbc' LIMIT 1";

  db_set_active('characters');
  $result_select_character = db_query($query_select_character);
  db_set_active('default');



//  print_r($row);
//  print_r($result_select_character->rowCount());
//  echo"<pre>";
//  die();



  if ($result_select_character->rowCount() == 1) { // If OK
    $row = $result_select_character->fetchAssoc();

    $guid = $row['guid'];
    $race = $row['race'];
    $gender = $row['gender'];
    $b = $row['playerBytes'];
    $b2 = $row['playerBytes2'];

    // Set Character Features
    $ha = ($b >> 16) % 256;
    $hc = ($b >> 24) % 256;
    $fa = ($b >> 8) % 256;
    $sk = $b % 256;
    $fh = $b2 % 256;

    // Set Character Race/Gender
    $char_race = array(
      1 => 'human',
      2 => 'orc',
      3 => 'dwarf',
      4 => 'nightelf',
      5 => 'scourge',
      6 => 'tauren',
      7 => 'gnome',
      8 => 'troll',
      10 => 'bloodelf',
      11 => 'draenei');

    $char_gender = array(
      0 => 'male',
      1 => 'female');

    $rg = $char_race[$race] . $char_gender[$gender];


    $query_select_guid_drupal = "SELECT item FROM character_inventory WHERE guid = '$guid' AND bag='0' AND slot <'18'";

    db_set_active('characters');
    $result_select_guid_drupal = db_query($query_select_guid_drupal);
    db_set_active('default');


    print_r($result_select_guid_drupal->rowCount());




    die('dead');
//    $query_select_guid = mysql_query("SELECT item FROM character_inventory WHERE guid = '$guid' AND bag='0' AND slot <'18'");
    if (mysql_num_rows($query_select_guid) != 0) {
      $eq = "";
      while ($row_select_guid = mysql_fetch_array($query_select_guid)) {
        $item = $row_select_guid['item'];
        mysql_select_db($config['char_db']);
        $query_select_itemEntry = mysql_query("SELECT itemEntry FROM item_instance WHERE guid = '$item'");
        if (mysql_num_rows($query_select_itemEntry) != 0) {
          while ($row_itemEntry = mysql_fetch_array($query_select_itemEntry)) {
            $itemEntry = $row_itemEntry['itemEntry'];
            if ($itemEntry != "") {
              $items_array[] = $itemEntry;

              mysql_select_db($config['world_db']);
              $query_select_item = "SELECT displayid, InventoryType FROM item_template WHERE entry = '$itemEntry' LIMIT 1";
              $result_select_item = mysql_query($query_select_item);
              if (!mysql_num_rows($result_select_item) == 0) {
                $row_item = mysql_fetch_array($result_select_item);
                $displayid = $row_item['displayid'];
                $inventory_type = $row_item['InventoryType'];
                if ($eq == "") {
                  $eq = $inventory_type . ',' . $displayid;
                }
                else {
                  $eq .= ',' . $inventory_type . ',' . $displayid;
                }
              }
              else {
                // If not OK
                echo '<p>The DisplayID could not be retrieved. We apologize for any inconvenience.</p>'; // Public message.
                //echo '<p>' . mysql_error() . '<br /><br />Query: ' . $query . '</p>'; // Debugging message.
                $errors++;
              }
            }
            else {
              // If not OK
              echo '<p>The itemEntry could not be retrieved. We apologize for any inconvenience.</p>'; // Public message.
              //echo '<p>' . mysql_error() . '<br /><br />Query: ' . $query . '</p>'; // Debugging message.
              $errors++;
            }
          }
        }
        else {
          // If not OK
          echo '<p>The Inventory could not be retrieved. We apologize for any inconvenience.</p>'; // Public message.
          //echo '<p>' . mysql_error() . '<br /><br />Query: ' . $query . '</p>'; // Debugging message.
          $errors++;
        }
      }
    }
  }
  else {
    // If not OK
    echo '<p>The Character could not be retrieved. We apologize for any inconvenience.</p>'; // Public message.
    //echo '<p>' . mysql_error() . '<br /><br />Query: ' . $query . '</p>'; // Debugging message.
    $errors++;
  }
  if ($errors == 0) {
    echo '<div id="model_scene" align="center">';
    echo '<object id="wowhead" type="application/x-shockwave-flash" data="http://static.wowhead.com/modelviewer/ModelView.swf" height="400px" width="300px">';
    echo '<param name="quality" value="high">';
    echo '<param name="allowscriptaccess" value="always">';
    echo '<param name="menu" value="false">';
    echo '<param value="transparent" name="wmode">';
    echo printf('<param name="flashvars" value="model=%s&amp;modelType=16&amp;ha=%s&amp;hc=%s&amp;fa=%s&amp;sk=%s&amp;fh=%s&amp;fc=0&amp;contentPath=http://static.wowhead.com/modelviewer/&amp;blur=0&amp;equipList=%s">', $rg, $ha, $hc, $fa, $sk, $fh, $eq);
    echo '<param name="movie" value="http://static.wowhead.com/modelviewer/ModelView.swf">';
    echo '</object>';
    echo '</div>';
    print_r($items_array);
  }
}

/**
 * Submit function for the wordlist configuration page.
 */
function wowitems_page_submit($form, $form_state) {
//  //Break up the list of words by line breaks.
//  $words = explode("\r\n", $form_state['input']['wordlist_words']);
//  wordlist_save_list($words);
//  drupal_set_message(t('The words have been saved!'));
//  dpm($words);
}
